name: CI

on:
  push:
    branches:
      - main
  pull_request:
    branches:
      - main

permissions:
  pull-requests: read
  contents: read

jobs:
  pr-title:
    name: PR Title Check
    runs-on: ubuntu-latest
    if: github.event_name == 'pull_request'
    steps:
      - uses: amannn/action-semantic-pull-request@v5
        env:
          GITHUB_TOKEN: ${{ secrets.GH_PAT }}
        with:
          types: |
            feat
            fix
            docs
            style
            refactor
            perf
            test
            build
            ci
            chore
            revert

  deps-check:
    name: Dependency Check
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@v3

      - name: Set up Go
        uses: actions/setup-go@v4
        with:
          go-version: '1.21'
          cache: true

      - name: Verify dependencies
        run: go mod verify

      - name: Run nancy for vulnerability scan
        uses: sonatype-nexus-community/nancy-github-action@main

      - name: Check for direct dependency updates
        run: |
          go list -u -m -json all | go-mod-outdated -update -direct

  test:
    name: Tests
    runs-on: ubuntu-latest
    services:
      ipfs:
        image: ipfs/kubo:latest
        ports:
          - 5001:5001
          - 8080:8080
        options: >-
          --health-cmd "ipfs id"
          --health-interval 10s
          --health-timeout 5s
          --health-retries 5

    steps:
      - uses: actions/checkout@v3

      - name: Set up Go
        uses: actions/setup-go@v4
        with:
          go-version: '1.21'
          cache: true

      - name: Install dependencies
        run: go mod download

      - name: Wait for IPFS
        run: |
          timeout 30s bash -c 'until curl -s http://localhost:5001/api/v0/id > /dev/null; do sleep 1; done'

      - name: Run tests
        run: go test -v -race -coverprofile=coverage.txt -covermode=atomic ./...
        env:
          IPFS_API: http://localhost:5001

      - name: Upload coverage
        uses: codecov/codecov-action@v3
        with:
          file: ./coverage.txt
          fail_ci_if_error: true

  lint:
    name: Lint
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@v3

      - name: Set up Go
        uses: actions/setup-go@v4
        with:
          go-version: '1.21'
          cache: true

      - name: golangci-lint
        uses: golangci/golangci-lint-action@v3
        with:
          version: latest
          args: --timeout=5m